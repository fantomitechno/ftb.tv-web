datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Command {
  channelId   String
  commandName String
  message     String?
  fetch       String?
  reply       Boolean @default(true)
  isMod       Boolean @default(false)
  cooldown    Int     @default(10)

  @@id(name: "channelCommand", [channelId, commandName])
}

model Token {
  channelId    String   @unique
  accessToken  String
  expiresIn    Int
  createdAt    DateTime @default(now())
  refreshToken String
}

model Settings {
  channelId      String      @id
  title          String      @default("{}")
  antiUpperCase  Boolean     @default(true)
  antiDuplicate  Boolean     @default(true)
  warnsBeforeBan Int         @default(5)
  banwords       BanWords    @relation(fields: [channelId], references: [channelId], map: "banwords_channel")
  linkFilters    LinkFilters @relation(fields: [channelId], references: [channelId], map: "linkfilters_channel")
}

model Warning {
  channelId String
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  date      DateTime @default(now())
  reason    String
  userId    String
}

model User {
  name    String
  id      String    @id
  Warning Warning[]
}

model Timer {
  channelId  String
  id         Int    @id @default(autoincrement())
  repeatTime Int
  message    String
  nbMessage  Int?
}

model BanWords {
  channelId String     @id
  blackList String[]   @default([])
  whiteList String[]   @default([])
  Settings  Settings[]
}

model LinkFilters {
  channelId      String     @id
  deleteAll      Boolean    @default(true)
  trustedLinks   String[]   @default(["clips.twitch.tv"])
  untrustedLinks String[]   @default([])
  Settings       Settings[]
}
