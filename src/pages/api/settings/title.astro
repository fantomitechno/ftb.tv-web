---
import { getChannel, isValidCookie } from "../../../utils/cookie";
import { prisma } from "../../../utils/database";
const token = Astro.cookies.get("token")?.value ?? "";

if (!isValidCookie(token)) return new Response("", { status: 400 });

const channelId = getChannel(token);

let settings = await prisma.settings.findFirst({where: {channelId}});

if (!settings) settings = await prisma.settings.create({data: {channelId}})

let title = settings?.title;
if (Astro.request.method === "PUT") {
  const data = await Astro.request.formData();
  title = (data.get("title")?.valueOf() as string) ?? "";
  await prisma.settings.update({
    where: {
      channelId
    },
    data: {
      title,
    },
  });
} else if (Astro.request.method === "DELETE") {
  await prisma.settings.update({
    where: {
      channelId
    },
    data: {
      title: "{}"
    }
  });
}
---

{
  Astro.request.method === "GET" ? (
    <form hx-put={`/api/settings/title`} hx-target="this" hx-swap="outerHTML">
      <label>Title template</label>:{" "}
      <input type="text" name="title" value={settings.title} />
      <br />
      <button>Submit</button>
      <button hx-delete={`/api/settings/title`}>Reset</button>
      <style>
        button {
          margin: 0.15rem;
        }
      </style>
    </form>
  ) : (
    <div hx-target="this" hx-swap="outerHTML">
      <label>Title template</label>: <b>{title}</b>
      <button id="title-button" hx-get={`/api/settings/title`}>
        {"Click To Edit"}
      </button>
    </div>
  )
}
