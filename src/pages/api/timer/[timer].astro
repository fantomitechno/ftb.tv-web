---
import TimerView from "../../../components/timers/TimerView.astro";
import { getChannel, isValidCookie } from "../../../utils/cookie";
import { prisma } from "../../../utils/database";

const { timer: timerId } = Astro.params;
const token = Astro.cookies.get("token")?.value ?? "";

if (!timerId || !isValidCookie(token)) return new Response("", { status: 400 });

const channelId = getChannel(token);

const timer = await prisma.timer.findFirst({
  where: {
    id: Number(timerId),
    channelId,
  },
});

if (!timer) return new Response("", { status: 404 });

if (Astro.request.method === "PUT") {
  const data = await Astro.request.formData();
  timer.message = (data.get("message")?.valueOf() as string)!;
  timer.repeatTime = Number(
    (data.get("repeatTime")?.valueOf() as string) ?? "10",
  );
  timer.nbMessage = Number((data.get("nbMessage")?.valueOf() as string) ?? "0");
  if (timer.nbMessage === 0) timer.nbMessage = null;
  await prisma.timer.update({
    where: {
      id: Number(timerId),
    },
    data: timer,
  });
} else if (Astro.request.method === "DELETE") {
  await prisma.timer.delete({
    where: {
      id: Number(timerId),
    },
  });
}
---

{
  Astro.request.method === "GET" && (
    <form hx-put={`/api/timer/${timerId}`} hx-target="this" hx-swap="outerHTML">
      <label>Message</label>:{" "}
      <input type="text" name="message" value={timer.message} />
      <label>Timing</label>:
      <input type="number" name="repeatTime" value={timer.repeatTime} />
      <label>Number of messages</label>:
      <input type="number" name="nbMessage" value={timer.nbMessage ?? 0} />
      <button>Submit</button>
      <button hx-delete={`/api/timer/${timerId}`}>Remove</button>
    </form>
  )
}
{Astro.request.method === "PUT" && <TimerView timer={timer} edit={true} />}
{
  Astro.request.method === "DELETE" && (
    <script is:inline>window.location.reload();</script>
  )
}
